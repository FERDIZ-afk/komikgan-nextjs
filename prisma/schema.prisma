generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  ADMIN
  USER
}

enum Status {
  COMPLETED
  ONGOING
}

enum Type {
  MANGA
  MANHWA
  MANHUA
}

enum PostStatus {
  PUBLISHED
  DRAFT
}

model User {
  id       String    @id @default(uuid())
  username String    @unique
  email    String    @unique
  password String
  image    String?
  role     Role      @default(USER)
  series   Serie[]
  chapters Chapter[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Serie {
  id            Int        @id @default(autoincrement())
  title         String
  slug          String     @unique
  description   String     @db.Text
  status        Status
  type          Type
  postStatus    PostStatus
  image         String?
  alternative   String?
  author        String?
  artist        String?
  serialization String?
  released      String?
  rating        String?

  userId   String
  user     User      @relation(fields: [userId], references: [id])
  genres   Genre[]
  chapters Chapter[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Genre {
  id   Int    @id @default(autoincrement())
  name String
  slug String @unique

  series Serie[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chapter {
  id            Int        @id @default(autoincrement())
  title         String
  slug          String     @unique
  content       String     @db.Text
  chapterNumber String
  postStatus    PostStatus

  serieId Int
  serie   Serie  @relation(fields: [serieId], references: [id])
  userId  String
  user    User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
